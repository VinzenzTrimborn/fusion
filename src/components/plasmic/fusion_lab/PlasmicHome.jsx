// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: adU29zJd9uLGW9TewABBsV
// Component: yVO7gSdMDe6r
import * as React from "react";
import * as p from "@plasmicapp/react-web";
import * as ph from "@plasmicapp/react-web/lib/host";
import {
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts
} from "@plasmicapp/react-web";
import Navbar from "../../Navbar"; // plasmic-import: lwEnvYluELlC/component
import ActionButton from "../../ActionButton"; // plasmic-import: x_Fghcos84Ui/component
import QuestionsForm from "../../QuestionsForm"; // plasmic-import: Uk8ghP4bFAyL/component
import ProjectInformation from "../../ProjectInformation"; // plasmic-import: HF0vnKWastHz/component
import ParticipationArea from "../../ParticipationArea"; // plasmic-import: clPh1NSkBPaO/component
import FaqSection from "../../FaqSection"; // plasmic-import: Qhhf4YZ2QDy9/component
import AboutUs from "../../AboutUs"; // plasmic-import: IwB4ixeF6-I9/component
import Team from "../../Team"; // plasmic-import: SnzWAy89iw5m/component
import "@plasmicapp/react-web/lib/plasmic.css";
import plasmic_antd_5_hostless_css from "../antd_5_hostless/plasmic_antd_5_hostless.module.css"; // plasmic-import: ohDidvG9XsCeFumugENU3J/projectcss
import plasmic_plasmic_rich_components_css from "../plasmic_rich_components/plasmic_plasmic_rich_components.module.css"; // plasmic-import: jkU633o1Cz7HrJdwdxhVHk/projectcss
import projectcss from "./plasmic_fusion_lab.module.css"; // plasmic-import: adU29zJd9uLGW9TewABBsV/projectcss
import sty from "./PlasmicHome.module.css"; // plasmic-import: yVO7gSdMDe6r/css

createPlasmicElementProxy;

export const PlasmicHome__VariantProps = new Array();

export const PlasmicHome__ArgProps = new Array();

const $$ = {};

function PlasmicHome__RenderFunc(props) {
  const { variants, overrides, forNode } = props;
  const args = React.useMemo(() => Object.assign({}, props.args), [props.args]);
  const $props = {
    ...args,
    ...variants
  };
  const $ctx = ph.useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;
  const currentUser = p.useCurrentUser?.() || {};
  return (
    <React.Fragment>
      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            plasmic_antd_5_hostless_css.plasmic_tokens,
            plasmic_plasmic_rich_components_css.plasmic_tokens,
            sty.root
          )}
        >
          <div
            data-plasmic-name={"intro"}
            data-plasmic-override={overrides.intro}
            className={classNames(projectcss.all, sty.intro)}
          >
            <div
              data-plasmic-name={"renderOfTheBridge"}
              data-plasmic-override={overrides.renderOfTheBridge}
              className={classNames(projectcss.all, sty.renderOfTheBridge)}
            >
              <div
                data-plasmic-name={
                  "dalle20231228172044AModernBridgeShowcasingContemporaryArchitectureTheBridgeSpansAWideRiverReflectingASleekFuturisticDesign2"
                }
                data-plasmic-override={
                  overrides.dalle20231228172044AModernBridgeShowcasingContemporaryArchitectureTheBridgeSpansAWideRiverReflectingASleekFuturisticDesign2
                }
                className={classNames(
                  projectcss.all,
                  sty.dalle20231228172044AModernBridgeShowcasingContemporaryArchitectureTheBridgeSpansAWideRiverReflectingASleekFuturisticDesign2
                )}
              />
            </div>
          </div>
          <Navbar
            data-plasmic-name={"navbar"}
            data-plasmic-override={overrides.navbar}
            className={classNames("__wab_instance", sty.navbar)}
          />

          <p.Stack
            as={"div"}
            data-plasmic-name={"header"}
            data-plasmic-override={overrides.header}
            hasGap={true}
            className={classNames(projectcss.all, sty.header)}
          >
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__kVxWg)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__tbQo
                )}
              >
                {"Donnersberger Bridge needs to be rebuild"}
              </div>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__r1Z
                )}
              >
                {
                  "Help us finetune the new design based on your needs and opinion"
                }
              </div>
              <div className={classNames(projectcss.all, sty.freeBox__qn852)}>
                <ActionButton
                  data-plasmic-name={"participateButton"}
                  data-plasmic-override={overrides.participateButton}
                  className={classNames(
                    "__wab_instance",
                    sty.participateButton
                  )}
                >
                  {"Tell us how you use the bridge"}
                </ActionButton>
              </div>
            </p.Stack>
            <QuestionsForm
              data-plasmic-name={"questions"}
              data-plasmic-override={overrides.questions}
              className={classNames("__wab_instance", sty.questions)}
            />
          </p.Stack>
          <ProjectInformation
            data-plasmic-name={"projectInformation"}
            data-plasmic-override={overrides.projectInformation}
            className={classNames("__wab_instance", sty.projectInformation)}
          />

          <ParticipationArea
            data-plasmic-name={"participationArea"}
            data-plasmic-override={overrides.participationArea}
            className={classNames("__wab_instance", sty.participationArea)}
          />

          <FaqSection
            data-plasmic-name={"faqSection"}
            data-plasmic-override={overrides.faqSection}
            className={classNames("__wab_instance", sty.faqSection)}
          />

          <AboutUs
            data-plasmic-name={"aboutUs"}
            data-plasmic-override={overrides.aboutUs}
            className={classNames("__wab_instance", sty.aboutUs)}
          />

          <Team
            data-plasmic-name={"team"}
            data-plasmic-override={overrides.team}
            className={classNames("__wab_instance", sty.team)}
          />
        </div>
      </div>
    </React.Fragment>
  );
}

const PlasmicDescendants = {
  root: [
    "root",
    "intro",
    "renderOfTheBridge",
    "dalle20231228172044AModernBridgeShowcasingContemporaryArchitectureTheBridgeSpansAWideRiverReflectingASleekFuturisticDesign2",
    "navbar",
    "header",
    "participateButton",
    "questions",
    "projectInformation",
    "participationArea",
    "faqSection",
    "aboutUs",
    "team"
  ],

  intro: [
    "intro",
    "renderOfTheBridge",
    "dalle20231228172044AModernBridgeShowcasingContemporaryArchitectureTheBridgeSpansAWideRiverReflectingASleekFuturisticDesign2"
  ],

  renderOfTheBridge: [
    "renderOfTheBridge",
    "dalle20231228172044AModernBridgeShowcasingContemporaryArchitectureTheBridgeSpansAWideRiverReflectingASleekFuturisticDesign2"
  ],

  dalle20231228172044AModernBridgeShowcasingContemporaryArchitectureTheBridgeSpansAWideRiverReflectingASleekFuturisticDesign2:
    [
      "dalle20231228172044AModernBridgeShowcasingContemporaryArchitectureTheBridgeSpansAWideRiverReflectingASleekFuturisticDesign2"
    ],

  navbar: ["navbar"],
  header: ["header", "participateButton", "questions"],
  participateButton: ["participateButton"],
  questions: ["questions"],
  projectInformation: ["projectInformation"],
  participationArea: ["participationArea"],
  faqSection: ["faqSection"],
  aboutUs: ["aboutUs"],
  team: ["team"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: PlasmicHome__ArgProps,
          internalVariantPropNames: PlasmicHome__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicHome__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicHome";
  } else {
    func.displayName = `PlasmicHome.${nodeName}`;
  }
  return func;
}

export const PlasmicHome = Object.assign(
  // Top-level PlasmicHome renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    intro: makeNodeComponent("intro"),
    renderOfTheBridge: makeNodeComponent("renderOfTheBridge"),
    dalle20231228172044AModernBridgeShowcasingContemporaryArchitectureTheBridgeSpansAWideRiverReflectingASleekFuturisticDesign2:
      makeNodeComponent(
        "dalle20231228172044AModernBridgeShowcasingContemporaryArchitectureTheBridgeSpansAWideRiverReflectingASleekFuturisticDesign2"
      ),
    navbar: makeNodeComponent("navbar"),
    header: makeNodeComponent("header"),
    participateButton: makeNodeComponent("participateButton"),
    questions: makeNodeComponent("questions"),
    projectInformation: makeNodeComponent("projectInformation"),
    participationArea: makeNodeComponent("participationArea"),
    faqSection: makeNodeComponent("faqSection"),
    aboutUs: makeNodeComponent("aboutUs"),
    team: makeNodeComponent("team"),
    // Metadata about props expected for PlasmicHome
    internalVariantProps: PlasmicHome__VariantProps,
    internalArgProps: PlasmicHome__ArgProps,
    // Page metadata
    pageMetadata: {
      title: "Participate Donnersberger",
      description: "",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default PlasmicHome;
/* prettier-ignore-end */
