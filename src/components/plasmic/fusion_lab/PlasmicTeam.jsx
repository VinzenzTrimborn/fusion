// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: adU29zJd9uLGW9TewABBsV
// Component: SnzWAy89iw5m
import * as React from "react";
import {
  PlasmicImg as PlasmicImg__,
  Stack as Stack__,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  useCurrentUser
} from "@plasmicapp/react-web";
import { useDataEnv } from "@plasmicapp/react-web/lib/host";
import "@plasmicapp/react-web/lib/plasmic.css";
import plasmic_antd_5_hostless_css from "../antd_5_hostless/plasmic_antd_5_hostless.module.css"; // plasmic-import: ohDidvG9XsCeFumugENU3J/projectcss
import plasmic_plasmic_rich_components_css from "../plasmic_rich_components/plasmic_plasmic_rich_components.module.css"; // plasmic-import: jkU633o1Cz7HrJdwdxhVHk/projectcss
import projectcss from "./plasmic_fusion_lab.module.css"; // plasmic-import: adU29zJd9uLGW9TewABBsV/projectcss
import sty from "./PlasmicTeam.module.css"; // plasmic-import: SnzWAy89iw5m/css
import ellipse94Pwwq9GinLkcJ from "./images/ellipse94.svg"; // plasmic-import: Pwwq9GINLkcJ/picture
import ellipse96VqRzDp9T50Mu from "./images/ellipse96.svg"; // plasmic-import: VqRzDP9t50MU/picture
import ellipse98HNxjJfqdv0Ot from "./images/ellipse98.svg"; // plasmic-import: hNXJJfqdv0ot/picture
import ellipse95Z1FcWs93Tz from "./images/ellipse95.svg"; // plasmic-import: Z1fcWS9-3TZ-/picture
import ellipse97WXYy61HktYmm from "./images/ellipse97.svg"; // plasmic-import: wXYy61hktYmm/picture

createPlasmicElementProxy;

export const PlasmicTeam__VariantProps = new Array();

export const PlasmicTeam__ArgProps = new Array();

const $$ = {};

function PlasmicTeam__RenderFunc(props) {
  const { variants, overrides, forNode } = props;
  const args = React.useMemo(() => Object.assign({}, props.args), [props.args]);
  const $props = {
    ...args,
    ...variants
  };
  const $ctx = useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;
  const currentUser = useCurrentUser?.() || {};
  return (
    <Stack__
      as={"div"}
      data-plasmic-name={"root"}
      data-plasmic-override={overrides.root}
      data-plasmic-root={true}
      data-plasmic-for-node={forNode}
      hasGap={true}
      className={classNames(
        projectcss.all,
        projectcss.root_reset,
        projectcss.plasmic_default_styles,
        projectcss.plasmic_mixins,
        projectcss.plasmic_tokens,
        plasmic_antd_5_hostless_css.plasmic_tokens,
        plasmic_plasmic_rich_components_css.plasmic_tokens,
        sty.root
      )}
    >
      <div className={classNames(projectcss.all, sty.freeBox___0ZDE)}>
        <div
          className={classNames(
            projectcss.all,
            projectcss.__wab_text,
            sty.text__lca8N
          )}
        >
          {"Team"}
        </div>
      </div>
      <div className={classNames(projectcss.all, sty.freeBox___4BVv)}>
        <div
          data-plasmic-name={"boxLelino"}
          data-plasmic-override={overrides.boxLelino}
          className={classNames(projectcss.all, sty.boxLelino)}
          onClick={async event => {
            const $steps = {};
            $steps["goToHttpswwwlinkedincominlelinoGomes92B7B0A9"] = true
              ? (() => {
                  const actionArgs = {
                    destination:
                      "https://www.linkedin.com/in/lelino-gomes-92b7b0a9/"
                  };
                  return (({ destination }) => {
                    if (
                      typeof destination === "string" &&
                      destination.startsWith("#")
                    ) {
                      document
                        .getElementById(destination.substr(1))
                        .scrollIntoView({ behavior: "smooth" });
                    } else {
                      location.assign(destination);
                    }
                  })?.apply(null, [actionArgs]);
                })()
              : undefined;
            if (
              $steps["goToHttpswwwlinkedincominlelinoGomes92B7B0A9"] != null &&
              typeof $steps["goToHttpswwwlinkedincominlelinoGomes92B7B0A9"] ===
                "object" &&
              typeof $steps["goToHttpswwwlinkedincominlelinoGomes92B7B0A9"]
                .then === "function"
            ) {
              $steps["goToHttpswwwlinkedincominlelinoGomes92B7B0A9"] =
                await $steps["goToHttpswwwlinkedincominlelinoGomes92B7B0A9"];
            }
          }}
        >
          <PlasmicImg__
            data-plasmic-name={"photoLelino"}
            data-plasmic-override={overrides.photoLelino}
            alt={""}
            className={classNames(sty.photoLelino)}
            displayHeight={"150px"}
            displayMaxHeight={"none"}
            displayMaxWidth={"none"}
            displayMinHeight={"0"}
            displayMinWidth={"0"}
            displayWidth={"150px"}
            loading={"lazy"}
            src={{
              src: ellipse94Pwwq9GinLkcJ,
              fullWidth: 331,
              fullHeight: 331,
              aspectRatio: 1
            }}
          />

          <div
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.text___144B0
            )}
          >
            {"Lelino\nGomes"}
          </div>
        </div>
        <div
          data-plasmic-name={"boxTina"}
          data-plasmic-override={overrides.boxTina}
          className={classNames(projectcss.all, sty.boxTina)}
          onClick={async event => {
            const $steps = {};
            $steps[
              "goToHttpswwwlinkedincominC3A7EltinaBalaj3141592653589793238"
            ] = true
              ? (() => {
                  const actionArgs = {
                    destination:
                      "https://www.linkedin.com/in/%C3%A7eltina-balaj-3141592653589793238/"
                  };
                  return (({ destination }) => {
                    if (
                      typeof destination === "string" &&
                      destination.startsWith("#")
                    ) {
                      document
                        .getElementById(destination.substr(1))
                        .scrollIntoView({ behavior: "smooth" });
                    } else {
                      location.assign(destination);
                    }
                  })?.apply(null, [actionArgs]);
                })()
              : undefined;
            if (
              $steps[
                "goToHttpswwwlinkedincominC3A7EltinaBalaj3141592653589793238"
              ] != null &&
              typeof $steps[
                "goToHttpswwwlinkedincominC3A7EltinaBalaj3141592653589793238"
              ] === "object" &&
              typeof $steps[
                "goToHttpswwwlinkedincominC3A7EltinaBalaj3141592653589793238"
              ].then === "function"
            ) {
              $steps[
                "goToHttpswwwlinkedincominC3A7EltinaBalaj3141592653589793238"
              ] = await $steps[
                "goToHttpswwwlinkedincominC3A7EltinaBalaj3141592653589793238"
              ];
            }
          }}
        >
          <PlasmicImg__
            data-plasmic-name={"photoTina"}
            data-plasmic-override={overrides.photoTina}
            alt={""}
            className={classNames(sty.photoTina)}
            displayHeight={"150px"}
            displayMaxHeight={"none"}
            displayMaxWidth={"none"}
            displayMinHeight={"0"}
            displayMinWidth={"0"}
            displayWidth={"150px"}
            loading={"lazy"}
            src={{
              src: ellipse96VqRzDp9T50Mu,
              fullWidth: 331,
              fullHeight: 331,
              aspectRatio: 1
            }}
          />

          <div
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.text__rxhKp
            )}
          >
            {"Celtina\nBalaj"}
          </div>
        </div>
        <div
          data-plasmic-name={"boxMohammad"}
          data-plasmic-override={overrides.boxMohammad}
          className={classNames(projectcss.all, sty.boxMohammad)}
          onClick={async event => {
            const $steps = {};
            $steps["goToHttpswwwlinkedincominmohammadAlrababHA00A72104"] = true
              ? (() => {
                  const actionArgs = {
                    destination:
                      "https://www.linkedin.com/in/mohammad-alrabab-h-a00a72104/"
                  };
                  return (({ destination }) => {
                    if (
                      typeof destination === "string" &&
                      destination.startsWith("#")
                    ) {
                      document
                        .getElementById(destination.substr(1))
                        .scrollIntoView({ behavior: "smooth" });
                    } else {
                      location.assign(destination);
                    }
                  })?.apply(null, [actionArgs]);
                })()
              : undefined;
            if (
              $steps["goToHttpswwwlinkedincominmohammadAlrababHA00A72104"] !=
                null &&
              typeof $steps[
                "goToHttpswwwlinkedincominmohammadAlrababHA00A72104"
              ] === "object" &&
              typeof $steps[
                "goToHttpswwwlinkedincominmohammadAlrababHA00A72104"
              ].then === "function"
            ) {
              $steps["goToHttpswwwlinkedincominmohammadAlrababHA00A72104"] =
                await $steps[
                  "goToHttpswwwlinkedincominmohammadAlrababHA00A72104"
                ];
            }
          }}
        >
          <PlasmicImg__
            data-plasmic-name={"photoMohammad"}
            data-plasmic-override={overrides.photoMohammad}
            alt={""}
            className={classNames(sty.photoMohammad)}
            displayHeight={"150px"}
            displayMaxHeight={"none"}
            displayMaxWidth={"none"}
            displayMinHeight={"0"}
            displayMinWidth={"0"}
            displayWidth={"150px"}
            loading={"lazy"}
            src={{
              src: ellipse98HNxjJfqdv0Ot,
              fullWidth: 331,
              fullHeight: 331,
              aspectRatio: 1
            }}
          />

          <div
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.text__nwz1W
            )}
          >
            {"Mohammad\n Alrabab\u2019h"}
          </div>
        </div>
        <div
          data-plasmic-name={"boxVinzenz"}
          data-plasmic-override={overrides.boxVinzenz}
          className={classNames(projectcss.all, sty.boxVinzenz)}
          onClick={async event => {
            const $steps = {};
            $steps["goToHttpswwwlinkedincominvinzenzTrimborn"] = true
              ? (() => {
                  const actionArgs = {
                    destination: "https://www.linkedin.com/in/vinzenz-trimborn/"
                  };
                  return (({ destination }) => {
                    if (
                      typeof destination === "string" &&
                      destination.startsWith("#")
                    ) {
                      document
                        .getElementById(destination.substr(1))
                        .scrollIntoView({ behavior: "smooth" });
                    } else {
                      location.assign(destination);
                    }
                  })?.apply(null, [actionArgs]);
                })()
              : undefined;
            if (
              $steps["goToHttpswwwlinkedincominvinzenzTrimborn"] != null &&
              typeof $steps["goToHttpswwwlinkedincominvinzenzTrimborn"] ===
                "object" &&
              typeof $steps["goToHttpswwwlinkedincominvinzenzTrimborn"].then ===
                "function"
            ) {
              $steps["goToHttpswwwlinkedincominvinzenzTrimborn"] = await $steps[
                "goToHttpswwwlinkedincominvinzenzTrimborn"
              ];
            }
          }}
        >
          <PlasmicImg__
            data-plasmic-name={"photoVinzenz"}
            data-plasmic-override={overrides.photoVinzenz}
            alt={""}
            className={classNames(sty.photoVinzenz)}
            displayHeight={"150px"}
            displayMaxHeight={"none"}
            displayMaxWidth={"none"}
            displayMinHeight={"0"}
            displayMinWidth={"0"}
            displayWidth={"150px"}
            loading={"lazy"}
            src={{
              src: ellipse95Z1FcWs93Tz,
              fullWidth: 331,
              fullHeight: 331,
              aspectRatio: 1
            }}
          />

          <div
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.text__sVNtH
            )}
          >
            {"Vinzenz\nTrimborn"}
          </div>
        </div>
        <div
          data-plasmic-name={"boxKoray"}
          data-plasmic-override={overrides.boxKoray}
          className={classNames(projectcss.all, sty.boxKoray)}
          onClick={async event => {
            const $steps = {};
            $steps["goToHttpswwwlinkedincominkorayInal"] = true
              ? (() => {
                  const actionArgs = {
                    destination: "https://www.linkedin.com/in/koray-inal/"
                  };
                  return (({ destination }) => {
                    if (
                      typeof destination === "string" &&
                      destination.startsWith("#")
                    ) {
                      document
                        .getElementById(destination.substr(1))
                        .scrollIntoView({ behavior: "smooth" });
                    } else {
                      location.assign(destination);
                    }
                  })?.apply(null, [actionArgs]);
                })()
              : undefined;
            if (
              $steps["goToHttpswwwlinkedincominkorayInal"] != null &&
              typeof $steps["goToHttpswwwlinkedincominkorayInal"] ===
                "object" &&
              typeof $steps["goToHttpswwwlinkedincominkorayInal"].then ===
                "function"
            ) {
              $steps["goToHttpswwwlinkedincominkorayInal"] = await $steps[
                "goToHttpswwwlinkedincominkorayInal"
              ];
            }
          }}
        >
          <PlasmicImg__
            data-plasmic-name={"photoKoray"}
            data-plasmic-override={overrides.photoKoray}
            alt={""}
            className={classNames(sty.photoKoray)}
            displayHeight={"auto"}
            displayMaxHeight={"none"}
            displayMaxWidth={"150%"}
            displayMinHeight={"0"}
            displayMinWidth={"0"}
            displayWidth={"150px"}
            loading={"lazy"}
            src={{
              src: ellipse97WXYy61HktYmm,
              fullWidth: 331,
              fullHeight: 331,
              aspectRatio: 1
            }}
          />

          <div
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.text__o2J8N
            )}
          >
            {"Koray\nInal"}
          </div>
        </div>
      </div>
    </Stack__>
  );
}

const PlasmicDescendants = {
  root: [
    "root",
    "boxLelino",
    "photoLelino",
    "boxTina",
    "photoTina",
    "boxMohammad",
    "photoMohammad",
    "boxVinzenz",
    "photoVinzenz",
    "boxKoray",
    "photoKoray"
  ],

  boxLelino: ["boxLelino", "photoLelino"],
  photoLelino: ["photoLelino"],
  boxTina: ["boxTina", "photoTina"],
  photoTina: ["photoTina"],
  boxMohammad: ["boxMohammad", "photoMohammad"],
  photoMohammad: ["photoMohammad"],
  boxVinzenz: ["boxVinzenz", "photoVinzenz"],
  photoVinzenz: ["photoVinzenz"],
  boxKoray: ["boxKoray", "photoKoray"],
  photoKoray: ["photoKoray"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: PlasmicTeam__ArgProps,
          internalVariantPropNames: PlasmicTeam__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicTeam__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicTeam";
  } else {
    func.displayName = `PlasmicTeam.${nodeName}`;
  }
  return func;
}

export const PlasmicTeam = Object.assign(
  // Top-level PlasmicTeam renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    boxLelino: makeNodeComponent("boxLelino"),
    photoLelino: makeNodeComponent("photoLelino"),
    boxTina: makeNodeComponent("boxTina"),
    photoTina: makeNodeComponent("photoTina"),
    boxMohammad: makeNodeComponent("boxMohammad"),
    photoMohammad: makeNodeComponent("photoMohammad"),
    boxVinzenz: makeNodeComponent("boxVinzenz"),
    photoVinzenz: makeNodeComponent("photoVinzenz"),
    boxKoray: makeNodeComponent("boxKoray"),
    photoKoray: makeNodeComponent("photoKoray"),
    // Metadata about props expected for PlasmicTeam
    internalVariantProps: PlasmicTeam__VariantProps,
    internalArgProps: PlasmicTeam__ArgProps
  }
);

export default PlasmicTeam;
/* prettier-ignore-end */
