// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: adU29zJd9uLGW9TewABBsV
// Component: y-2j-fa4twS1
import * as React from "react";
import * as p from "@plasmicapp/react-web";
import * as ph from "@plasmicapp/react-web/lib/host";
import {
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts
} from "@plasmicapp/react-web";
import VotingCard from "../../VotingCard"; // plasmic-import: oAGE1uzhgryh/component
import "@plasmicapp/react-web/lib/plasmic.css";
import plasmic_antd_5_hostless_css from "../antd_5_hostless/plasmic_antd_5_hostless.module.css"; // plasmic-import: ohDidvG9XsCeFumugENU3J/projectcss
import plasmic_plasmic_rich_components_css from "../plasmic_rich_components/plasmic_plasmic_rich_components.module.css"; // plasmic-import: jkU633o1Cz7HrJdwdxhVHk/projectcss
import projectcss from "./plasmic_fusion_lab.module.css"; // plasmic-import: adU29zJd9uLGW9TewABBsV/projectcss
import sty from "./PlasmicVotingSection.module.css"; // plasmic-import: y-2j-fa4twS1/css

createPlasmicElementProxy;

export const PlasmicVotingSection__VariantProps = new Array();

export const PlasmicVotingSection__ArgProps = new Array();

const $$ = {};

function PlasmicVotingSection__RenderFunc(props) {
  const { variants, overrides, forNode } = props;
  const args = React.useMemo(() => Object.assign({}, props.args), [props.args]);
  const $props = {
    ...args,
    ...variants
  };
  const $ctx = ph.useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;
  const currentUser = p.useCurrentUser?.() || {};
  return (
    <div
      data-plasmic-name={"vote"}
      data-plasmic-override={overrides.vote}
      data-plasmic-root={true}
      data-plasmic-for-node={forNode}
      className={classNames(
        projectcss.all,
        projectcss.root_reset,
        projectcss.plasmic_default_styles,
        projectcss.plasmic_mixins,
        projectcss.plasmic_tokens,
        plasmic_antd_5_hostless_css.plasmic_tokens,
        plasmic_plasmic_rich_components_css.plasmic_tokens,
        sty.vote
      )}
    >
      <p.Stack
        as={"div"}
        data-plasmic-name={"freeBox"}
        data-plasmic-override={overrides.freeBox}
        hasGap={true}
        className={classNames(projectcss.all, sty.freeBox)}
      >
        <VotingCard
          className={classNames("__wab_instance", sty.votingCard__hnUh1)}
        />

        <VotingCard
          className={classNames("__wab_instance", sty.votingCard__aV27L)}
        />

        <VotingCard
          className={classNames("__wab_instance", sty.votingCard___4M1VA)}
        />

        <VotingCard
          className={classNames("__wab_instance", sty.votingCard__dZYnU)}
        />

        <VotingCard
          className={classNames("__wab_instance", sty.votingCard__bhY)}
        />
      </p.Stack>
    </div>
  );
}

const PlasmicDescendants = {
  vote: ["vote", "freeBox"],
  freeBox: ["freeBox"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: PlasmicVotingSection__ArgProps,
          internalVariantPropNames: PlasmicVotingSection__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicVotingSection__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "vote") {
    func.displayName = "PlasmicVotingSection";
  } else {
    func.displayName = `PlasmicVotingSection.${nodeName}`;
  }
  return func;
}

export const PlasmicVotingSection = Object.assign(
  // Top-level PlasmicVotingSection renders the root element
  makeNodeComponent("vote"),
  {
    // Helper components rendering sub-elements
    freeBox: makeNodeComponent("freeBox"),
    // Metadata about props expected for PlasmicVotingSection
    internalVariantProps: PlasmicVotingSection__VariantProps,
    internalArgProps: PlasmicVotingSection__ArgProps
  }
);

export default PlasmicVotingSection;
/* prettier-ignore-end */
