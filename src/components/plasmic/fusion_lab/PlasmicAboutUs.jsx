// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: adU29zJd9uLGW9TewABBsV
// Component: IwB4ixeF6-I9
import * as React from "react";
import * as p from "@plasmicapp/react-web";
import * as ph from "@plasmicapp/react-web/lib/host";
import {
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts
} from "@plasmicapp/react-web";
import "@plasmicapp/react-web/lib/plasmic.css";
import plasmic_antd_5_hostless_css from "../antd_5_hostless/plasmic_antd_5_hostless.module.css"; // plasmic-import: ohDidvG9XsCeFumugENU3J/projectcss
import plasmic_plasmic_rich_components_css from "../plasmic_rich_components/plasmic_plasmic_rich_components.module.css"; // plasmic-import: jkU633o1Cz7HrJdwdxhVHk/projectcss
import projectcss from "./plasmic_fusion_lab.module.css"; // plasmic-import: adU29zJd9uLGW9TewABBsV/projectcss
import sty from "./PlasmicAboutUs.module.css"; // plasmic-import: IwB4ixeF6-I9/css
import VectorIcon from "./icons/PlasmicIcon__Vector"; // plasmic-import: 4d51r7sRnt8j/icon
import Group13Icon from "./icons/PlasmicIcon__Group13"; // plasmic-import: P5SM-mYbpQxy/icon
import CheckCircleIcon from "./icons/PlasmicIcon__CheckCircle"; // plasmic-import: _PxKsfZ_LQmM/icon

createPlasmicElementProxy;

export const PlasmicAboutUs__VariantProps = new Array();

export const PlasmicAboutUs__ArgProps = new Array();

const $$ = {};

function PlasmicAboutUs__RenderFunc(props) {
  const { variants, overrides, forNode } = props;
  const args = React.useMemo(() => Object.assign({}, props.args), [props.args]);
  const $props = {
    ...args,
    ...variants
  };
  const $ctx = ph.useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;
  const currentUser = p.useCurrentUser?.() || {};
  return (
    <div
      data-plasmic-name={"root"}
      data-plasmic-override={overrides.root}
      data-plasmic-root={true}
      data-plasmic-for-node={forNode}
      className={classNames(
        projectcss.all,
        projectcss.root_reset,
        projectcss.plasmic_default_styles,
        projectcss.plasmic_mixins,
        projectcss.plasmic_tokens,
        plasmic_antd_5_hostless_css.plasmic_tokens,
        plasmic_plasmic_rich_components_css.plasmic_tokens,
        sty.root
      )}
    >
      <div
        data-plasmic-name={"aboutUsPage"}
        data-plasmic-override={overrides.aboutUsPage}
        className={classNames(projectcss.all, sty.aboutUsPage)}
      >
        <div className={classNames(projectcss.all, sty.freeBox__ivuxh)}>
          <div
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.text__iBgtz
            )}
          >
            {"About Us"}
          </div>
        </div>
        <div className={classNames(projectcss.all, sty.freeBox__vPiio)}>
          <VectorIcon
            className={classNames(projectcss.all, sty.svg__vbLdr)}
            role={"img"}
          />

          <p.Stack
            as={"div"}
            data-plasmic-name={"columns"}
            data-plasmic-override={overrides.columns}
            hasGap={true}
            className={classNames(projectcss.all, sty.columns)}
          >
            <div className={classNames(projectcss.all, sty.column___2AwPy)}>
              <div className={classNames(projectcss.all, sty.freeBox__wY6Ka)}>
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__ua1Ib)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__tQjRo
                    )}
                  >
                    {
                      "\nWelcome to our innovation hub! We, a group of master's students from the Technical University of Munich, specializing in Information Technologies for the Built Environment, have united our diverse backgrounds in the AEC sector. Our mission: to create a tool that places public participation at the core of the design process for significant projects. Enter the Donnersberger Bridge, born out of our endeavors during the Fusion Lab course in our third semester.\n\nAs we stand on the cusp of further development, we invite citizens to acquaint themselves with our vision, its underlying concept, and share their opinions before we move forward. Our web application serves as the gateway to this exciting collaboration, providing multiple avenues for citizen participation.\n\nExplore our initial drawings and intricate 3D models, detailed enough for a comprehensive understanding. Immerse yourself virtually, walking the span of the new bridge to experience its functionality firsthand. Within the virtual model, discover detailed information about the design, structural aspects, construction process, sustainable ideas, and traffic flow\u2014all conveniently presented as pop-up information.\n\nYour voice matters\u2014leave comments directly within the 3D model as you navigate. And, in a final act of engagement, cast your vote for your preferred design option. Choose between our team and others who pursued different paths in the Fusion Lab course. Join us in shaping the future of architecture, where innovation meets community, and together, we build bridges that transcend expectations. Welcome to a new era of design democracy!\n\n"
                    }
                  </div>
                </p.Stack>
              </div>
            </div>
            <div className={classNames(projectcss.all, sty.column__jMwXm)}>
              <div className={classNames(projectcss.all, sty.freeBox__nSjqe)} />
            </div>
          </p.Stack>
        </div>
        <div className={classNames(projectcss.all, sty.freeBox__xs4Pc)}>
          <div className={classNames(projectcss.all, sty.freeBox__p0Vh)}>
            <Group13Icon
              className={classNames(projectcss.all, sty.svg__zssdI)}
              role={"img"}
            />

            <div className={classNames(projectcss.all, sty.freeBox__lixK)}>
              <CheckCircleIcon
                className={classNames(projectcss.all, sty.svg__ikx7X)}
                role={"img"}
              />

              <div className={classNames(projectcss.all, sty.freeBox__gf1Oy)}>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__hloR6
                  )}
                >
                  {"The bridge serves as a landmark"}
                </div>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text___5Anf6
                  )}
                >
                  {
                    "A tourist magnet and a charming city addition. The distinctive platform adds a touch of uniqueness, a memorable experience."
                  }
                </div>
              </div>
            </div>
            <div className={classNames(projectcss.all, sty.freeBox__iZvu)}>
              <CheckCircleIcon
                className={classNames(projectcss.all, sty.svg__gXzJv)}
                role={"img"}
              />

              <div className={classNames(projectcss.all, sty.freeBox___9OjcM)}>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text___0FfL
                  )}
                >
                  {"Design concept refers to the identity of the city"}
                </div>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__fRgx
                  )}
                >
                  {
                    "The smooth arches seamlessly integrate with the landscape, framing the city like a welcoming gateway being inspired by its history and coulture. "
                  }
                </div>
              </div>
            </div>
            <div className={classNames(projectcss.all, sty.freeBox___63Al)}>
              <CheckCircleIcon
                className={classNames(projectcss.all, sty.svg___7LRrG)}
                role={"img"}
              />

              <div className={classNames(projectcss.all, sty.freeBox___49Qte)}>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__lcZxX
                  )}
                >
                  {"Sustainable Architecture that serves as a Social Hub"}
                </div>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__oYr6X
                  )}
                >
                  {
                    "Embark on a visual journey along the environment, and witness firsthand the beauty of architectural designs interwoven by nature and human imagination"
                  }
                </div>
              </div>
            </div>
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__xk5Mx
              )}
            >
              {"Why Choose Us"}
            </div>
          </div>
        </div>
      </div>
    </div>
  );
}

const PlasmicDescendants = {
  root: ["root", "aboutUsPage", "columns"],
  aboutUsPage: ["aboutUsPage", "columns"],
  columns: ["columns"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: PlasmicAboutUs__ArgProps,
          internalVariantPropNames: PlasmicAboutUs__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicAboutUs__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicAboutUs";
  } else {
    func.displayName = `PlasmicAboutUs.${nodeName}`;
  }
  return func;
}

export const PlasmicAboutUs = Object.assign(
  // Top-level PlasmicAboutUs renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    aboutUsPage: makeNodeComponent("aboutUsPage"),
    columns: makeNodeComponent("columns"),
    // Metadata about props expected for PlasmicAboutUs
    internalVariantProps: PlasmicAboutUs__VariantProps,
    internalArgProps: PlasmicAboutUs__ArgProps
  }
);

export default PlasmicAboutUs;
/* prettier-ignore-end */
